// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperSimpleSchedulingSystem.Data;

#nullable disable

namespace SuperSimpleSchedulingSystem.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassStudent", b =>
                {
                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("ClassStudent", "dbo");
                });

            modelBuilder.Entity("SuperSimpleSchedulingSystem.Data.Models.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Schedule")
                        .HasColumnType("int");

                    b.Property<string>("Teacher")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Class_Id");

                    b.ToTable("Class", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f29c595-2e96-40d5-9e86-08db4d6c094c"),
                            Description = "In this class you will learn the fundamentals of Javascript thanks to the realization of multiple projects",
                            Schedule = 0,
                            Teacher = "Jhon Petersonn",
                            Title = "Introduction to Programming with Javascript"
                        },
                        new
                        {
                            Id = new Guid("a0d208e3-2b70-4c31-9e8b-08db4d6c094c"),
                            Description = "Explore the fundamental concepts of data structures and algorithms, with hands-on coding exercises.",
                            Schedule = 1,
                            Teacher = "Alice Johnson",
                            Title = "Data Structures and Algorithms"
                        },
                        new
                        {
                            Id = new Guid("4c84c62b-b98f-4670-9e88-08db4d6c094c"),
                            Description = "Learn the basics of web development, including HTML, CSS, and JavaScript.",
                            Schedule = 2,
                            Teacher = "Bob Smith",
                            Title = "Web Development Basics"
                        },
                        new
                        {
                            Id = new Guid("646a14a8-9a45-4c79-9e87-08db4d6c094c"),
                            Description = "Understand the principles of database design and master SQL for effective data management.",
                            Schedule = 0,
                            Teacher = "Charlie Brown",
                            Title = "Database Design and SQL"
                        },
                        new
                        {
                            Id = new Guid("d8276c8f-84e5-41fa-9e8c-08db4d6c094c"),
                            Description = "Build cross-platform mobile applications using React Native and modern JavaScript frameworks.",
                            Schedule = 3,
                            Teacher = "Diana Miller",
                            Title = "Mobile App Development with React Native"
                        },
                        new
                        {
                            Id = new Guid("c791a7a4-625e-4a46-9e90-08db4d6c094c"),
                            Description = "Explore the basics of cybersecurity and learn essential techniques to secure computer systems.",
                            Schedule = 1,
                            Teacher = "Edward Turner",
                            Title = "Cybersecurity Fundamentals"
                        },
                        new
                        {
                            Id = new Guid("a9bb7a24-f2bb-4faf-9e91-08db4d6c094c"),
                            Description = "Get an introduction to cloud computing and popular cloud platforms like AWS and Azure.",
                            Schedule = 1,
                            Teacher = "Jack Miller",
                            Title = "Cloud Computing Intermediate"
                        },
                        new
                        {
                            Id = new Guid("b0a1221c-414f-45d6-9e92-08db4d6c094c"),
                            Description = "Dive into the basics of artificial intelligence and machine learning algorithms.",
                            Schedule = 2,
                            Teacher = "Grace Watson",
                            Title = "Artificial Intelligence Fundamentals"
                        },
                        new
                        {
                            Id = new Guid("08cb5f72-944f-4e9c-9e94-08db4d6c094c"),
                            Description = "Explore the best practices in software engineering for creating maintainable and scalable applications.",
                            Schedule = 3,
                            Teacher = "Henry White",
                            Title = "Software Engineering Best Practices"
                        },
                        new
                        {
                            Id = new Guid("6eeab56d-9357-43a5-9e96-08db4d6c094c"),
                            Description = "Learn the essentials of network security, including encryption, firewalls, and intrusion detection.",
                            Schedule = 0,
                            Teacher = "Ivy Robinson",
                            Title = "Network Security"
                        });
                });

            modelBuilder.Entity("SuperSimpleSchedulingSystem.Data.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_Student_Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Student", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5d72e55-a870-4f1a-9e80-08db4d6c094c"),
                            FirstName = "Rodrigo",
                            LastName = "Heredia",
                            UserId = new Guid("3b9ef2b3-44f4-4b0a-8c4a-08db4d6c094c")
                        },
                        new
                        {
                            Id = new Guid("9bc9a0ec-f5e1-42b5-9e82-08db4d6c094c"),
                            FirstName = "John",
                            LastName = "Peterson",
                            UserId = new Guid("4890f590-f25e-45d8-9e78-08db4d6c094c")
                        },
                        new
                        {
                            Id = new Guid("7fae9a91-4c35-4e57-9e83-08db4d6c094c"),
                            FirstName = "Camila",
                            LastName = "Peredo",
                            UserId = new Guid("b821e05d-873a-481e-8c4b-08db4d6c094c")
                        },
                        new
                        {
                            Id = new Guid("f98231c8-9d22-4c69-9e84-08db4d6c094c"),
                            FirstName = "Christopher",
                            LastName = "Davis",
                            UserId = new Guid("aa4fbdba-35f7-45b5-9e88-08db4d6c094c")
                        },
                        new
                        {
                            Id = new Guid("a7f570f2-0b1b-4779-9e85-08db4d6c094c"),
                            FirstName = "Jessica",
                            LastName = "Brown",
                            UserId = new Guid("61bc6e41-7d14-4cf2-9e87-08db4d6c094c")
                        },
                        new
                        {
                            Id = new Guid("e2d8cc80-29ca-45b1-9e89-08db4d6c094c"),
                            FirstName = "Brian",
                            LastName = "Anderson",
                            UserId = new Guid("3c66c9fa-8759-45d7-9e8a-08db4d6c094c")
                        });
                });

            modelBuilder.Entity("SuperSimpleSchedulingSystem.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_User_Id");

                    b.ToTable("User", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b9ef2b3-44f4-4b0a-8c4a-08db4d6c094c"),
                            Password = "Pass123",
                            UserName = "rodrigo.heredia"
                        },
                        new
                        {
                            Id = new Guid("4890f590-f25e-45d8-9e78-08db4d6c094c"),
                            Password = "12345.J",
                            UserName = "john.peterson"
                        },
                        new
                        {
                            Id = new Guid("b821e05d-873a-481e-8c4b-08db4d6c094c"),
                            Password = "CaMi!23",
                            UserName = "camila.peredo"
                        },
                        new
                        {
                            Id = new Guid("aa4fbdba-35f7-45b5-9e88-08db4d6c094c"),
                            Password = "Password321",
                            UserName = "christopher.davies"
                        },
                        new
                        {
                            Id = new Guid("61bc6e41-7d14-4cf2-9e87-08db4d6c094c"),
                            Password = "TestingTesting@",
                            UserName = "jessica.brown"
                        },
                        new
                        {
                            Id = new Guid("3c66c9fa-8759-45d7-9e8a-08db4d6c094c"),
                            Password = "He1loWorlD",
                            UserName = "brian.anderson"
                        });
                });

            modelBuilder.Entity("ClassStudent", b =>
                {
                    b.HasOne("SuperSimpleSchedulingSystem.Data.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperSimpleSchedulingSystem.Data.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperSimpleSchedulingSystem.Data.Models.Student", b =>
                {
                    b.HasOne("SuperSimpleSchedulingSystem.Data.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("SuperSimpleSchedulingSystem.Data.Models.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Student_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SuperSimpleSchedulingSystem.Data.Models.User", b =>
                {
                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
